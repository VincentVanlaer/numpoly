version-tags: &version-tags
    tags:
        only: /v\d+\.\d+\.\d+(-(alpha|beta|rc|dev|post)\d+)?/

version: 2.1
jobs:
    test-37:
        docker:
            - image: circleci/python:3.7.10
              auth:
                username: jonathf
                password: $DOCKERHUB_PASSWORD
        steps:
            - checkout
            - restore_cache:
                keys:
                    - py37-{{ checksum "poetry.lock"}}
                    - py37-
            - run:
                name: "Installation"
                command: |
                    python3 -m venv venv
                    source venv/bin/activate
                    pip install poetry==1.1.5
                    poetry install
            - save_cache:
                key: py37-{{ checksum "poetry.lock"}}
                paths:
                    - venv
            - run:
                name: "Run tests"
                command: |
                    source venv/bin/activate
                    coverage run --source numpoly/ --module pytest --doctest-modules numpoly/ test/ docs/*.rst README.rst
            - run:
                name: "Report home"
                command: |
                    source venv/bin/activate
                    codecov
                    coverage report --show-missing
    test-39:
        docker:
            - image: circleci/python:3.9.4
              auth:
                username: jonathf
                password: $DOCKERHUB_PASSWORD
        steps:
            - checkout
            - restore_cache:
                keys:
                    - py39-{{ checksum "poetry.lock"}}
                    - py39-
            - run:
                name: "Installation"
                command: |
                    python3 -m venv venv
                    source venv/bin/activate
                    pip install poetry==1.1.5
                    poetry install
            - save_cache:
                key: py39-{{ checksum "poetry.lock"}}
                paths:
                    - venv
            - run:
                name: "Run pylint"
                command: |
                    source venv/bin/activate
                    pylint --rcfile=.pylintrc -E numpoly
            - run:
                name: "Run pydocstyle"
                command: |
                    source venv/bin/activate
                    pydocstyle numpoly
            - run:
                name: "Run mypy"
                command: |
                    source venv/bin/activate
                    mypy numpoly
            - run:
                name: "Run Sphinx build"
                command: |
                    source venv/bin/activate
                    sphinx-build docs/ docs/.build -b html -v --color -T -W --keep-going
    deploy:
        docker:
            - image: circleci/python:3.9.4
              auth:
                username: jonathf
                password: $DOCKERHUB_PASSWORD
        steps:
            - checkout
            - restore_cache:
                keys:
                    - py39-{{ checksum "poetry.lock"}}
            - run:
                name: "Verify tag version"
                command: |
                    PROJECT_TAG=$(cat pyproject.toml \
                        | grep 'version\s*=' \
                        | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+\(-[a-z0-9]\+\)\{0,1\}')
                    echo "$CIRCLE_TAG == v$PROJECT_TAG"
                    test "$CIRCLE_TAG" = "v$PROJECT_TAG"
            - run:
                name: "Publish to PyPI"
                command: |
                    source venv/bin/activate
                    poetry publish --build -u jonathf -p $PYPI_PASSWORD -n

workflows:
    version: 2.1
    workflow:
        jobs:
            - test-37:
                filters:
                    <<: *version-tags
            - test-39:
                filters:
                    <<: *version-tags
            - deploy:
                requires:
                    - test-37
                    - test-39
                filters:
                    <<: *version-tags
                    branches:
                        ignore: /.*/
